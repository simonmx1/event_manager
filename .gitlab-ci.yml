image: maven:3.8.2-jdk-11
# c703257/skeletontests/maven4skeleton:latest

stages:          # List of stages for jobs, and their order of execution
  - test
  - SonarCheck
  - DeployContainer

variables:
  CI_REGISTRY_IMAGE_RELEASE: "${CI_REGISTRY_IMAGE}/maven4skeleton"

unit-test-job:   # This job runs in the test stage.
  image: docker.uibk.ac.at:443/c703257/skeletontests/maven4skeleton
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests..."
    - mvn test
  allow_failure: true

sonarqube-check:
  stage: SonarCheck
  image: docker.uibk.ac.at:443/c703257/skeletontests/maven4skeleton
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/code/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - echo Running sonar analysis for ${SONAR_PROJECT_KEY}
    - mvn -Dsonar.projectKey=${SONAR_PROJECT_KEY} -Dsonar.projectName="${SONAR_PROJECT_KEY} ${GITLAB_USER_NAME}" verify sonar:sonar
  allow_failure: true
  
release_container:
  stage: DeployContainer
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

  script:
    - echo "-->" $CI_COMMIT_SHORT_SHA ${SONAR_PROJECT_KEY} "<--"
    - docker build --build-arg SONAR_PROJECT_KEY=${SONAR_PROJECT_KEY} --build-arg SONAR_HOST_URL=${SONAR_HOST_URL} --build-arg SONAR_TOKEN=${SONAR_TOKEN}  --tag $CI_REGISTRY_IMAGE_RELEASE:latest --tag $CI_REGISTRY_IMAGE_RELEASE:$CI_COMMIT_SHORT_SHA .
#    - docker build --target release --tag $CI_REGISTRY_IMAGE_RELEASE:latest --tag $CI_REGISTRY_IMAGE_RELEASE:$CI_COMMIT_TAG .
    - docker push $CI_REGISTRY_IMAGE_RELEASE:latest
    - docker push $CI_REGISTRY_IMAGE_RELEASE:$CI_COMMIT_SHORT_SHA
  when: manual
